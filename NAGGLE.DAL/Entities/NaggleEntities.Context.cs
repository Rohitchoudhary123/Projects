//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NAGGLE.DAL.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    
    public partial class NaggleEntities : DbContext
    {
        public NaggleEntities()
            : base("name=NaggleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AccountAccountType> AccountAccountType { get; set; }
        public DbSet<AccountCategory> AccountCategory { get; set; }
        public DbSet<AccountCompany> AccountCompany { get; set; }
        public DbSet<AccountType> AccountType { get; set; }
        public DbSet<Company> Company { get; set; }
        public DbSet<Country> Country { get; set; }
        public DbSet<Role> Role { get; set; }
        public DbSet<State> State { get; set; }
        public DbSet<AccountContact> AccountContact { get; set; }
        public DbSet<User> User { get; set; }
        public DbSet<Account> Account { get; set; }
        public DbSet<AttributeCategory> AttributeCategory { get; set; }
        public DbSet<FeatureType> FeatureType { get; set; }
        public DbSet<Attribute> Attribute { get; set; }
        public DbSet<Category> Category { get; set; }
        public DbSet<Availability> Availability { get; set; }
        public DbSet<Division> Division { get; set; }
        public DbSet<ProductAccountPrice> ProductAccountPrice { get; set; }
        public DbSet<ProductAttribute> ProductAttribute { get; set; }
        public DbSet<ProductAvailability> ProductAvailability { get; set; }
        public DbSet<ProductClass> ProductClass { get; set; }
        public DbSet<ProductPricing> ProductPricing { get; set; }
        public DbSet<Product> Product { get; set; }
        public DbSet<ProductCategory> ProductCategory { get; set; }
        public DbSet<ProductDivision> ProductDivision { get; set; }
    
        public virtual int CreateUserRole(Nullable<int> userId, Nullable<int> roleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateUserRole", userIdParameter, roleIdParameter);
        }
    }
}
